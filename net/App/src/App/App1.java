package App;

import java.util.Arrays;
import java.util.Scanner;

public class App1 {

	public static void main(String[] args) {
		
		/*
		 * [응용문제][공용프로젝트]
		 * 여러명의 점수 데이터가 존재합니다.
		 * 프로그램 실행시 해당 사용자 이름을 입력합니다.
		 * 해당 점수 데이터 중 사용자 이름과 동일한 데이터만 출력되도록 합니다.
		 * [프로세서 실행 결과] 
		 * "검색할 데이터 학생명을 입력해주세요."	ex) 수학
		 * "검색할 과목 점수 [전체] 전체 " 전체 다 출력
		 * "검색할 과목 점수 [전체] 수학 " 수학만 출력
		 * 
		 * 검색데이터 학생명 : 홍길동
		 * 점수데이터 : 국어 55, 수학 60, 과학 77, 역사 90
		 * 
		 * 데이터값
		 * 
		 * 	{"박은경","이경훈","장운","조기현","김진수"},
		 * 	{"80","78","92","67","40"},	//국어
		 * 	{"40","80","80","92","100"}, //수학
		 * 	{"95","30","55","90","65"},	//과학
		 * 	{"20","80","100","95","30"}	//역사
		 * }
		 * 
		 * A파트 : 
		 * 사용자가 해당 질문을 입력할 수 있는 프로세서를 제작하고,
		 * 최종 결과값을 return 받아서 처리해야 합니다.
		 * 단, 해당 데이터의 없는 사용자를 입력할 경우 
		 * "데이터를 찾지 못했습니다." 라고 입력되어야 합니다.
		 * 또한, 과목을 전체로 입력할 경우 국어~역사까지 모두 출력합니다.
		 * 해당 특정 과목을 입력할 경우 해당 과목 점수만 출력되도록 합니다.
		 * 
		 * B파트 :
		 * A파트에서 전달 받은 사용자 입력값 형태에 맞춰서 결과값을 A파트로 다시 재전달하시면 됩니다.
		 * 
		 */

		Scanner sc = new Scanner(System.in);
		System.out.println("검색할 학생명을 입력해주세요.");
		String name = sc.next();
		System.out.println("검색할 과목명을 입력해주세요. [전체] 또는 [과목명]");
		String jumsu = sc.next();
		


	}
/*	
	public void name() {
		Scanner sc = new Scanner(System.in);
		System.out.println("검색할 학생명을 입력해주세요.");
		String name = sc.next();
	}
	public void name2() {
		Scanner sc2 = new Scanner(System.in);
		System.out.println("검색할 과목명을 입력해주세요. [전체] 또는 [과목명]");
		String jumsu = sc2.next();
	} 
*/
	/*
	public void Adata(String name1, String jumsu1) {
		
		String user[][] = { 
				{ "박은경", "이경훈", "장운", "조기현", "김진수" }, 
				{ "80", "78", "92", "67", "40" },
				{ "40", "80", "80", "92", "100" }, 
				{ "95", "30", "55", "90", "65" },
				{ "20", "80", "100", "95", "30" } 
		};

	}
	*/

}


/*
 * 
 * A파트 
- 사용자가 입력하는 값 2개 (1)
- 사용자 이름 -> B파트 (2)

B파트 
-A파트에서 사용자 이름 -> setter -> 배열로 검토 -> 사용자 이름 유/무 (3)

A파트
-B파트에서 결과값을 받은 후 조건으로 처리하여 2번째 질문 유/무 (4)
-정상적으로 사용자 이름을 파악 -> 검색할 과목명을 입력하세요[전체 또는 과목명] (5)
-사용자가 최종적으로 이름과 과목명 -> B파트 (6)

B파트
-A파트에서 사용자 이름, 과목명  -> 코드 작성하여 배열값을 추출(문자열) (7)
-만약 전체 과목 데이터 92,80,55,100 보냅니다 -> A파트 (7)

A파트
-사용자 입력 중 2가지 모드로 최종 결과를 출력 (8)

EX) 
국어 : 92
전체 : 국어:data[0], 수학:data[1], 과학:data[2], 역사data[3]

EX)
학생이름
과목명
검색한 데이터 학생명 : 학생이름
점수데이터 : 과목명 : 점수
*/

